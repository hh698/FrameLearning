<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--数据库的配置信息-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--声明数据源Datasource,作用是连接数据库     **数据源-->
    <bean   id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--set注入给DruidDataSource提供连接数据库的信息-->
        <property name="url" value="${jdbc.url}?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive"  value="${jdbc.maxActive}"/>
    </bean>

    <!--声明mybatis中提供的sqlSessionFactoryBean类，该类中创建sqlSessionFactory    **sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--set注入，把数据库的连接池赋给了dataSource属性-->
        <property name="dataSource" ref="myDataSource"/>
        <!--mybatis主配值文件的位置
        configLocation的属性是Resource类型,读取配置文件
        使用value指定文件路径，使用classpath表示文件位置
        -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <!--创建dao对象，使用sqlSession的getMapper(StudentDao.class)        **dao
    MapperScannerConfigurer在内部调用getMapper()生成每个dao接口的代理对象
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定sqlSessionFactory对象的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--指定dao接口所在的包名
        MapperScannerConfigurer会扫描这个包中的所有接口，把每个接口都执行一次getMapper()方法
        到的每个接口的dao对象,将创建好的dao对象放入到容器中. dao对象默认名称是 接口名（首字母小写）
        -->
        <property name="basePackage" value="com.hfq.dao"/>
    </bean>

    <!--声明service-->
    <bean   id="buyService" class="com.hfq.service.impl.BuyGoodsServiceImpl">
        <property name="goodsDao" ref="goodsDao"/>
        <property name="saleDao" ref="saleDao"/>
    </bean>
</beans>