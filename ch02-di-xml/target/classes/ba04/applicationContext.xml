<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--
    引用类型的自动注入:spring框架根据某些规则可以给引用类型赋值
    使用的规则最常用的是byName,byType
    1.byName （按名称注入） java类中引用类型的属性名和spring容器中（配置文件）<bean>的id一样
                        且数据类型一致，这样的容器中的bean，spring能够赋值给引用类型
      <bean id= "xx" class="yy" autowire ="byName"/>
            简单类型的属性赋值
      <bean/>
     2.byType(按类型注入) java类中引用类型的数据类型和spring容器中（配置文件）<bean>的calss属性
        是同源的,这样的bean能够赋值给引用类型
        同源:java类中引用类型的数据类型和bean的class的值是一样的
            java类中引用类型的数据类型和bean的class的值是父子类关系
            java类中引用类型的数据类型和bean的class的值是接口和实现类关系
      <bean id= "xx" class="yy" autowire ="byType"/>
            简单类型的属性赋值
      <bean/>
    -->

    <!--byName-->
    <bean id="myStudent" class="com.hfq.ba04.Student" autowire="byName">
        <property name="name"   value="李四"/>
        <property name="age"   value="12"/>
        <!--引用类型-->
<!--        <property name="school"   ref="mySchool" />-->
    </bean>

    <bean id="school" class="com.hfq.ba04.School">
        <property name="name" value="上海大学"/>
        <property name="address" value="上海"/>
    </bean>
</beans>